// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

@class GameCenterResponse;
@class GameCenterResponse_Builder;
@class GameCenterResponse_Room;
@class GameCenterResponse_Room_Builder;
@class GameStatusRequest;
@class GameStatusRequest_Builder;
@class GameStatusResponse;
@class GameStatusResponse_Builder;
@class GameStatusResponse_UserGameStatus;
@class GameStatusResponse_UserGameStatus_Builder;
@class RoomStatusResponse;
@class RoomStatusResponse_Builder;
@class User;
@class User_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  User_UserStatusTypeJoined = 0,
  User_UserStatusTypeConfirmed = 1,
  User_UserStatusTypePlay = 2,
  User_UserStatusTypeEnd = 3,
} User_UserStatusType;

BOOL User_UserStatusTypeIsValidValue(User_UserStatusType value);

typedef enum {
  RoomStatusResponse_RoomStatusTypeJoinSuccess = 0,
  RoomStatusResponse_RoomStatusTypeRoomUnavailable = 1,
  RoomStatusResponse_RoomStatusTypeSeatUnavailable = 2,
  RoomStatusResponse_RoomStatusTypeUserInvalid = 3,
} RoomStatusResponse_RoomStatusType;

BOOL RoomStatusResponse_RoomStatusTypeIsValidValue(RoomStatusResponse_RoomStatusType value);


@interface GamecenterRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface GameCenterResponse : PBGeneratedMessage {
@private
  PBAppendableArray * roomsArray;
}
@property (readonly, retain) PBArray * rooms;
- (GameCenterResponse_Room*)roomsAtIndex:(NSUInteger)index;

+ (GameCenterResponse*) defaultInstance;
- (GameCenterResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameCenterResponse_Builder*) builder;
+ (GameCenterResponse_Builder*) builder;
+ (GameCenterResponse_Builder*) builderWithPrototype:(GameCenterResponse*) prototype;
- (GameCenterResponse_Builder*) toBuilder;

+ (GameCenterResponse*) parseFromData:(NSData*) data;
+ (GameCenterResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameCenterResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GameCenterResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameCenterResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameCenterResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameCenterResponse_Room : PBGeneratedMessage {
@private
  BOOL hasRoomId_:1;
  BOOL hasNumberOfUsers_:1;
  BOOL hasTotalSeats_:1;
  BOOL hasRoomName_:1;
  int32_t roomId;
  int32_t numberOfUsers;
  int32_t totalSeats;
  NSString* roomName;
}
- (BOOL) hasRoomId;
- (BOOL) hasRoomName;
- (BOOL) hasNumberOfUsers;
- (BOOL) hasTotalSeats;
@property (readonly) int32_t roomId;
@property (readonly, retain) NSString* roomName;
@property (readonly) int32_t numberOfUsers;
@property (readonly) int32_t totalSeats;

+ (GameCenterResponse_Room*) defaultInstance;
- (GameCenterResponse_Room*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameCenterResponse_Room_Builder*) builder;
+ (GameCenterResponse_Room_Builder*) builder;
+ (GameCenterResponse_Room_Builder*) builderWithPrototype:(GameCenterResponse_Room*) prototype;
- (GameCenterResponse_Room_Builder*) toBuilder;

+ (GameCenterResponse_Room*) parseFromData:(NSData*) data;
+ (GameCenterResponse_Room*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameCenterResponse_Room*) parseFromInputStream:(NSInputStream*) input;
+ (GameCenterResponse_Room*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameCenterResponse_Room*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameCenterResponse_Room*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameCenterResponse_Room_Builder : PBGeneratedMessage_Builder {
@private
  GameCenterResponse_Room* result;
}

- (GameCenterResponse_Room*) defaultInstance;

- (GameCenterResponse_Room_Builder*) clear;
- (GameCenterResponse_Room_Builder*) clone;

- (GameCenterResponse_Room*) build;
- (GameCenterResponse_Room*) buildPartial;

- (GameCenterResponse_Room_Builder*) mergeFrom:(GameCenterResponse_Room*) other;
- (GameCenterResponse_Room_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameCenterResponse_Room_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRoomId;
- (int32_t) roomId;
- (GameCenterResponse_Room_Builder*) setRoomId:(int32_t) value;
- (GameCenterResponse_Room_Builder*) clearRoomId;

- (BOOL) hasRoomName;
- (NSString*) roomName;
- (GameCenterResponse_Room_Builder*) setRoomName:(NSString*) value;
- (GameCenterResponse_Room_Builder*) clearRoomName;

- (BOOL) hasNumberOfUsers;
- (int32_t) numberOfUsers;
- (GameCenterResponse_Room_Builder*) setNumberOfUsers:(int32_t) value;
- (GameCenterResponse_Room_Builder*) clearNumberOfUsers;

- (BOOL) hasTotalSeats;
- (int32_t) totalSeats;
- (GameCenterResponse_Room_Builder*) setTotalSeats:(int32_t) value;
- (GameCenterResponse_Room_Builder*) clearTotalSeats;
@end

@interface GameCenterResponse_Builder : PBGeneratedMessage_Builder {
@private
  GameCenterResponse* result;
}

- (GameCenterResponse*) defaultInstance;

- (GameCenterResponse_Builder*) clear;
- (GameCenterResponse_Builder*) clone;

- (GameCenterResponse*) build;
- (GameCenterResponse*) buildPartial;

- (GameCenterResponse_Builder*) mergeFrom:(GameCenterResponse*) other;
- (GameCenterResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameCenterResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)rooms;
- (GameCenterResponse_Room*)roomsAtIndex:(NSUInteger)index;
- (GameCenterResponse_Builder *)addRooms:(GameCenterResponse_Room*)value;
- (GameCenterResponse_Builder *)setRoomsArray:(NSArray *)array;
- (GameCenterResponse_Builder *)setRoomsValues:(const GameCenterResponse_Room* *)values count:(NSUInteger)count;
- (GameCenterResponse_Builder *)clearRooms;
@end

@interface User : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  BOOL hasUserName_:1;
  BOOL hasUserStatus_:1;
  int32_t userId;
  NSString* userName;
  User_UserStatusType userStatus;
}
- (BOOL) hasUserId;
- (BOOL) hasUserName;
- (BOOL) hasUserStatus;
@property (readonly) int32_t userId;
@property (readonly, retain) NSString* userName;
@property (readonly) User_UserStatusType userStatus;

+ (User*) defaultInstance;
- (User*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (User_Builder*) builder;
+ (User_Builder*) builder;
+ (User_Builder*) builderWithPrototype:(User*) prototype;
- (User_Builder*) toBuilder;

+ (User*) parseFromData:(NSData*) data;
+ (User*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (User*) parseFromInputStream:(NSInputStream*) input;
+ (User*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (User*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (User*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface User_Builder : PBGeneratedMessage_Builder {
@private
  User* result;
}

- (User*) defaultInstance;

- (User_Builder*) clear;
- (User_Builder*) clone;

- (User*) build;
- (User*) buildPartial;

- (User_Builder*) mergeFrom:(User*) other;
- (User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (User_Builder*) setUserId:(int32_t) value;
- (User_Builder*) clearUserId;

- (BOOL) hasUserName;
- (NSString*) userName;
- (User_Builder*) setUserName:(NSString*) value;
- (User_Builder*) clearUserName;

- (BOOL) hasUserStatus;
- (User_UserStatusType) userStatus;
- (User_Builder*) setUserStatus:(User_UserStatusType) value;
- (User_Builder*) clearUserStatus;
@end

@interface RoomStatusResponse : PBGeneratedMessage {
@private
  BOOL hasRoomStatus_:1;
  RoomStatusResponse_RoomStatusType roomStatus;
  PBAppendableArray * usersArray;
}
- (BOOL) hasRoomStatus;
@property (readonly) RoomStatusResponse_RoomStatusType roomStatus;
@property (readonly, retain) PBArray * users;
- (User*)usersAtIndex:(NSUInteger)index;

+ (RoomStatusResponse*) defaultInstance;
- (RoomStatusResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RoomStatusResponse_Builder*) builder;
+ (RoomStatusResponse_Builder*) builder;
+ (RoomStatusResponse_Builder*) builderWithPrototype:(RoomStatusResponse*) prototype;
- (RoomStatusResponse_Builder*) toBuilder;

+ (RoomStatusResponse*) parseFromData:(NSData*) data;
+ (RoomStatusResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomStatusResponse*) parseFromInputStream:(NSInputStream*) input;
+ (RoomStatusResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RoomStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RoomStatusResponse_Builder : PBGeneratedMessage_Builder {
@private
  RoomStatusResponse* result;
}

- (RoomStatusResponse*) defaultInstance;

- (RoomStatusResponse_Builder*) clear;
- (RoomStatusResponse_Builder*) clone;

- (RoomStatusResponse*) build;
- (RoomStatusResponse*) buildPartial;

- (RoomStatusResponse_Builder*) mergeFrom:(RoomStatusResponse*) other;
- (RoomStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RoomStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRoomStatus;
- (RoomStatusResponse_RoomStatusType) roomStatus;
- (RoomStatusResponse_Builder*) setRoomStatus:(RoomStatusResponse_RoomStatusType) value;
- (RoomStatusResponse_Builder*) clearRoomStatus;

- (PBAppendableArray *)users;
- (User*)usersAtIndex:(NSUInteger)index;
- (RoomStatusResponse_Builder *)addUsers:(User*)value;
- (RoomStatusResponse_Builder *)setUsersArray:(NSArray *)array;
- (RoomStatusResponse_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count;
- (RoomStatusResponse_Builder *)clearUsers;
@end

@interface GameStatusRequest : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  BOOL hasPoints_:1;
  BOOL hasTime_:1;
  int32_t userId;
  int32_t points;
  int32_t time;
}
- (BOOL) hasUserId;
- (BOOL) hasPoints;
- (BOOL) hasTime;
@property (readonly) int32_t userId;
@property (readonly) int32_t points;
@property (readonly) int32_t time;

+ (GameStatusRequest*) defaultInstance;
- (GameStatusRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameStatusRequest_Builder*) builder;
+ (GameStatusRequest_Builder*) builder;
+ (GameStatusRequest_Builder*) builderWithPrototype:(GameStatusRequest*) prototype;
- (GameStatusRequest_Builder*) toBuilder;

+ (GameStatusRequest*) parseFromData:(NSData*) data;
+ (GameStatusRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStatusRequest*) parseFromInputStream:(NSInputStream*) input;
+ (GameStatusRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStatusRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameStatusRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameStatusRequest_Builder : PBGeneratedMessage_Builder {
@private
  GameStatusRequest* result;
}

- (GameStatusRequest*) defaultInstance;

- (GameStatusRequest_Builder*) clear;
- (GameStatusRequest_Builder*) clone;

- (GameStatusRequest*) build;
- (GameStatusRequest*) buildPartial;

- (GameStatusRequest_Builder*) mergeFrom:(GameStatusRequest*) other;
- (GameStatusRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameStatusRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (GameStatusRequest_Builder*) setUserId:(int32_t) value;
- (GameStatusRequest_Builder*) clearUserId;

- (BOOL) hasPoints;
- (int32_t) points;
- (GameStatusRequest_Builder*) setPoints:(int32_t) value;
- (GameStatusRequest_Builder*) clearPoints;

- (BOOL) hasTime;
- (int32_t) time;
- (GameStatusRequest_Builder*) setTime:(int32_t) value;
- (GameStatusRequest_Builder*) clearTime;
@end

@interface GameStatusResponse : PBGeneratedMessage {
@private
  PBAppendableArray * statusListArray;
}
@property (readonly, retain) PBArray * statusList;
- (GameStatusResponse_UserGameStatus*)statusListAtIndex:(NSUInteger)index;

+ (GameStatusResponse*) defaultInstance;
- (GameStatusResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameStatusResponse_Builder*) builder;
+ (GameStatusResponse_Builder*) builder;
+ (GameStatusResponse_Builder*) builderWithPrototype:(GameStatusResponse*) prototype;
- (GameStatusResponse_Builder*) toBuilder;

+ (GameStatusResponse*) parseFromData:(NSData*) data;
+ (GameStatusResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStatusResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GameStatusResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameStatusResponse_UserGameStatus : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  BOOL hasPoints_:1;
  BOOL hasTime_:1;
  BOOL hasUserName_:1;
  BOOL hasUserStatus_:1;
  int32_t userId;
  int32_t points;
  int32_t time;
  NSString* userName;
  User_UserStatusType userStatus;
}
- (BOOL) hasUserId;
- (BOOL) hasUserStatus;
- (BOOL) hasPoints;
- (BOOL) hasTime;
- (BOOL) hasUserName;
@property (readonly) int32_t userId;
@property (readonly) User_UserStatusType userStatus;
@property (readonly) int32_t points;
@property (readonly) int32_t time;
@property (readonly, retain) NSString* userName;

+ (GameStatusResponse_UserGameStatus*) defaultInstance;
- (GameStatusResponse_UserGameStatus*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameStatusResponse_UserGameStatus_Builder*) builder;
+ (GameStatusResponse_UserGameStatus_Builder*) builder;
+ (GameStatusResponse_UserGameStatus_Builder*) builderWithPrototype:(GameStatusResponse_UserGameStatus*) prototype;
- (GameStatusResponse_UserGameStatus_Builder*) toBuilder;

+ (GameStatusResponse_UserGameStatus*) parseFromData:(NSData*) data;
+ (GameStatusResponse_UserGameStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStatusResponse_UserGameStatus*) parseFromInputStream:(NSInputStream*) input;
+ (GameStatusResponse_UserGameStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStatusResponse_UserGameStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameStatusResponse_UserGameStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameStatusResponse_UserGameStatus_Builder : PBGeneratedMessage_Builder {
@private
  GameStatusResponse_UserGameStatus* result;
}

- (GameStatusResponse_UserGameStatus*) defaultInstance;

- (GameStatusResponse_UserGameStatus_Builder*) clear;
- (GameStatusResponse_UserGameStatus_Builder*) clone;

- (GameStatusResponse_UserGameStatus*) build;
- (GameStatusResponse_UserGameStatus*) buildPartial;

- (GameStatusResponse_UserGameStatus_Builder*) mergeFrom:(GameStatusResponse_UserGameStatus*) other;
- (GameStatusResponse_UserGameStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameStatusResponse_UserGameStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (GameStatusResponse_UserGameStatus_Builder*) setUserId:(int32_t) value;
- (GameStatusResponse_UserGameStatus_Builder*) clearUserId;

- (BOOL) hasUserStatus;
- (User_UserStatusType) userStatus;
- (GameStatusResponse_UserGameStatus_Builder*) setUserStatus:(User_UserStatusType) value;
- (GameStatusResponse_UserGameStatus_Builder*) clearUserStatus;

- (BOOL) hasPoints;
- (int32_t) points;
- (GameStatusResponse_UserGameStatus_Builder*) setPoints:(int32_t) value;
- (GameStatusResponse_UserGameStatus_Builder*) clearPoints;

- (BOOL) hasTime;
- (int32_t) time;
- (GameStatusResponse_UserGameStatus_Builder*) setTime:(int32_t) value;
- (GameStatusResponse_UserGameStatus_Builder*) clearTime;

- (BOOL) hasUserName;
- (NSString*) userName;
- (GameStatusResponse_UserGameStatus_Builder*) setUserName:(NSString*) value;
- (GameStatusResponse_UserGameStatus_Builder*) clearUserName;
@end

@interface GameStatusResponse_Builder : PBGeneratedMessage_Builder {
@private
  GameStatusResponse* result;
}

- (GameStatusResponse*) defaultInstance;

- (GameStatusResponse_Builder*) clear;
- (GameStatusResponse_Builder*) clone;

- (GameStatusResponse*) build;
- (GameStatusResponse*) buildPartial;

- (GameStatusResponse_Builder*) mergeFrom:(GameStatusResponse*) other;
- (GameStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)statusList;
- (GameStatusResponse_UserGameStatus*)statusListAtIndex:(NSUInteger)index;
- (GameStatusResponse_Builder *)addStatusList:(GameStatusResponse_UserGameStatus*)value;
- (GameStatusResponse_Builder *)setStatusListArray:(NSArray *)array;
- (GameStatusResponse_Builder *)setStatusListValues:(const GameStatusResponse_UserGameStatus* *)values count:(NSUInteger)count;
- (GameStatusResponse_Builder *)clearStatusList;
@end

