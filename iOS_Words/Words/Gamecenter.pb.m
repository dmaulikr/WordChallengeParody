// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Gamecenter.pb.h"

@implementation GamecenterRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GamecenterRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface GameCenterResponse ()
@property (retain) PBAppendableArray * roomsArray;
@end

@implementation GameCenterResponse

@synthesize roomsArray;
@dynamic rooms;
- (void) dealloc {
  self.roomsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static GameCenterResponse* defaultGameCenterResponseInstance = nil;
+ (void) initialize {
  if (self == [GameCenterResponse class]) {
    defaultGameCenterResponseInstance = [[GameCenterResponse alloc] init];
  }
}
+ (GameCenterResponse*) defaultInstance {
  return defaultGameCenterResponseInstance;
}
- (GameCenterResponse*) defaultInstance {
  return defaultGameCenterResponseInstance;
}
- (PBArray *)rooms {
  return roomsArray;
}
- (GameCenterResponse_Room*)roomsAtIndex:(NSUInteger)index {
  return [roomsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (GameCenterResponse_Room* element in self.rooms) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (GameCenterResponse_Room *element in self.roomsArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (GameCenterResponse_Room *element in self.roomsArray) {
    size_ += computeMessageSize(1, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GameCenterResponse*) parseFromData:(NSData*) data {
  return (GameCenterResponse*)[[[GameCenterResponse builder] mergeFromData:data] build];
}
+ (GameCenterResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameCenterResponse*)[[[GameCenterResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GameCenterResponse*) parseFromInputStream:(NSInputStream*) input {
  return (GameCenterResponse*)[[[GameCenterResponse builder] mergeFromInputStream:input] build];
}
+ (GameCenterResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameCenterResponse*)[[[GameCenterResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameCenterResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GameCenterResponse*)[[[GameCenterResponse builder] mergeFromCodedInputStream:input] build];
}
+ (GameCenterResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameCenterResponse*)[[[GameCenterResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameCenterResponse_Builder*) builder {
  return [[[GameCenterResponse_Builder alloc] init] autorelease];
}
+ (GameCenterResponse_Builder*) builderWithPrototype:(GameCenterResponse*) prototype {
  return [[GameCenterResponse builder] mergeFrom:prototype];
}
- (GameCenterResponse_Builder*) builder {
  return [GameCenterResponse builder];
}
- (GameCenterResponse_Builder*) toBuilder {
  return [GameCenterResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (GameCenterResponse_Room* element in self.roomsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"rooms"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GameCenterResponse class]]) {
    return NO;
  }
  GameCenterResponse *otherMessage = other;
  return
      [self.roomsArray isEqualToArray:otherMessage.roomsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (GameCenterResponse_Room* element in self.roomsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GameCenterResponse_Room ()
@property int32_t roomId;
@property (retain) NSString* roomName;
@property int32_t numberOfUsers;
@property int32_t totalSeats;
@end

@implementation GameCenterResponse_Room

- (BOOL) hasRoomId {
  return !!hasRoomId_;
}
- (void) setHasRoomId:(BOOL) value_ {
  hasRoomId_ = !!value_;
}
@synthesize roomId;
- (BOOL) hasRoomName {
  return !!hasRoomName_;
}
- (void) setHasRoomName:(BOOL) value_ {
  hasRoomName_ = !!value_;
}
@synthesize roomName;
- (BOOL) hasNumberOfUsers {
  return !!hasNumberOfUsers_;
}
- (void) setHasNumberOfUsers:(BOOL) value_ {
  hasNumberOfUsers_ = !!value_;
}
@synthesize numberOfUsers;
- (BOOL) hasTotalSeats {
  return !!hasTotalSeats_;
}
- (void) setHasTotalSeats:(BOOL) value_ {
  hasTotalSeats_ = !!value_;
}
@synthesize totalSeats;
- (void) dealloc {
  self.roomName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.roomId = 0;
    self.roomName = @"";
    self.numberOfUsers = 0;
    self.totalSeats = 0;
  }
  return self;
}
static GameCenterResponse_Room* defaultGameCenterResponse_RoomInstance = nil;
+ (void) initialize {
  if (self == [GameCenterResponse_Room class]) {
    defaultGameCenterResponse_RoomInstance = [[GameCenterResponse_Room alloc] init];
  }
}
+ (GameCenterResponse_Room*) defaultInstance {
  return defaultGameCenterResponse_RoomInstance;
}
- (GameCenterResponse_Room*) defaultInstance {
  return defaultGameCenterResponse_RoomInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRoomId) {
    return NO;
  }
  if (!self.hasRoomName) {
    return NO;
  }
  if (!self.hasNumberOfUsers) {
    return NO;
  }
  if (!self.hasTotalSeats) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRoomId) {
    [output writeInt32:1 value:self.roomId];
  }
  if (self.hasRoomName) {
    [output writeString:2 value:self.roomName];
  }
  if (self.hasNumberOfUsers) {
    [output writeInt32:3 value:self.numberOfUsers];
  }
  if (self.hasTotalSeats) {
    [output writeInt32:4 value:self.totalSeats];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRoomId) {
    size_ += computeInt32Size(1, self.roomId);
  }
  if (self.hasRoomName) {
    size_ += computeStringSize(2, self.roomName);
  }
  if (self.hasNumberOfUsers) {
    size_ += computeInt32Size(3, self.numberOfUsers);
  }
  if (self.hasTotalSeats) {
    size_ += computeInt32Size(4, self.totalSeats);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GameCenterResponse_Room*) parseFromData:(NSData*) data {
  return (GameCenterResponse_Room*)[[[GameCenterResponse_Room builder] mergeFromData:data] build];
}
+ (GameCenterResponse_Room*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameCenterResponse_Room*)[[[GameCenterResponse_Room builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GameCenterResponse_Room*) parseFromInputStream:(NSInputStream*) input {
  return (GameCenterResponse_Room*)[[[GameCenterResponse_Room builder] mergeFromInputStream:input] build];
}
+ (GameCenterResponse_Room*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameCenterResponse_Room*)[[[GameCenterResponse_Room builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameCenterResponse_Room*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GameCenterResponse_Room*)[[[GameCenterResponse_Room builder] mergeFromCodedInputStream:input] build];
}
+ (GameCenterResponse_Room*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameCenterResponse_Room*)[[[GameCenterResponse_Room builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameCenterResponse_Room_Builder*) builder {
  return [[[GameCenterResponse_Room_Builder alloc] init] autorelease];
}
+ (GameCenterResponse_Room_Builder*) builderWithPrototype:(GameCenterResponse_Room*) prototype {
  return [[GameCenterResponse_Room builder] mergeFrom:prototype];
}
- (GameCenterResponse_Room_Builder*) builder {
  return [GameCenterResponse_Room builder];
}
- (GameCenterResponse_Room_Builder*) toBuilder {
  return [GameCenterResponse_Room builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRoomId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"roomId", [NSNumber numberWithInt:self.roomId]];
  }
  if (self.hasRoomName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"roomName", self.roomName];
  }
  if (self.hasNumberOfUsers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numberOfUsers", [NSNumber numberWithInt:self.numberOfUsers]];
  }
  if (self.hasTotalSeats) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalSeats", [NSNumber numberWithInt:self.totalSeats]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GameCenterResponse_Room class]]) {
    return NO;
  }
  GameCenterResponse_Room *otherMessage = other;
  return
      self.hasRoomId == otherMessage.hasRoomId &&
      (!self.hasRoomId || self.roomId == otherMessage.roomId) &&
      self.hasRoomName == otherMessage.hasRoomName &&
      (!self.hasRoomName || [self.roomName isEqual:otherMessage.roomName]) &&
      self.hasNumberOfUsers == otherMessage.hasNumberOfUsers &&
      (!self.hasNumberOfUsers || self.numberOfUsers == otherMessage.numberOfUsers) &&
      self.hasTotalSeats == otherMessage.hasTotalSeats &&
      (!self.hasTotalSeats || self.totalSeats == otherMessage.totalSeats) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasRoomId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.roomId] hash];
  }
  if (self.hasRoomName) {
    hashCode = hashCode * 31 + [self.roomName hash];
  }
  if (self.hasNumberOfUsers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numberOfUsers] hash];
  }
  if (self.hasTotalSeats) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.totalSeats] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GameCenterResponse_Room_Builder()
@property (retain) GameCenterResponse_Room* result;
@end

@implementation GameCenterResponse_Room_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GameCenterResponse_Room alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GameCenterResponse_Room_Builder*) clear {
  self.result = [[[GameCenterResponse_Room alloc] init] autorelease];
  return self;
}
- (GameCenterResponse_Room_Builder*) clone {
  return [GameCenterResponse_Room builderWithPrototype:result];
}
- (GameCenterResponse_Room*) defaultInstance {
  return [GameCenterResponse_Room defaultInstance];
}
- (GameCenterResponse_Room*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GameCenterResponse_Room*) buildPartial {
  GameCenterResponse_Room* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GameCenterResponse_Room_Builder*) mergeFrom:(GameCenterResponse_Room*) other {
  if (other == [GameCenterResponse_Room defaultInstance]) {
    return self;
  }
  if (other.hasRoomId) {
    [self setRoomId:other.roomId];
  }
  if (other.hasRoomName) {
    [self setRoomName:other.roomName];
  }
  if (other.hasNumberOfUsers) {
    [self setNumberOfUsers:other.numberOfUsers];
  }
  if (other.hasTotalSeats) {
    [self setTotalSeats:other.totalSeats];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GameCenterResponse_Room_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GameCenterResponse_Room_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRoomId:[input readInt32]];
        break;
      }
      case 18: {
        [self setRoomName:[input readString]];
        break;
      }
      case 24: {
        [self setNumberOfUsers:[input readInt32]];
        break;
      }
      case 32: {
        [self setTotalSeats:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRoomId {
  return result.hasRoomId;
}
- (int32_t) roomId {
  return result.roomId;
}
- (GameCenterResponse_Room_Builder*) setRoomId:(int32_t) value {
  result.hasRoomId = YES;
  result.roomId = value;
  return self;
}
- (GameCenterResponse_Room_Builder*) clearRoomId {
  result.hasRoomId = NO;
  result.roomId = 0;
  return self;
}
- (BOOL) hasRoomName {
  return result.hasRoomName;
}
- (NSString*) roomName {
  return result.roomName;
}
- (GameCenterResponse_Room_Builder*) setRoomName:(NSString*) value {
  result.hasRoomName = YES;
  result.roomName = value;
  return self;
}
- (GameCenterResponse_Room_Builder*) clearRoomName {
  result.hasRoomName = NO;
  result.roomName = @"";
  return self;
}
- (BOOL) hasNumberOfUsers {
  return result.hasNumberOfUsers;
}
- (int32_t) numberOfUsers {
  return result.numberOfUsers;
}
- (GameCenterResponse_Room_Builder*) setNumberOfUsers:(int32_t) value {
  result.hasNumberOfUsers = YES;
  result.numberOfUsers = value;
  return self;
}
- (GameCenterResponse_Room_Builder*) clearNumberOfUsers {
  result.hasNumberOfUsers = NO;
  result.numberOfUsers = 0;
  return self;
}
- (BOOL) hasTotalSeats {
  return result.hasTotalSeats;
}
- (int32_t) totalSeats {
  return result.totalSeats;
}
- (GameCenterResponse_Room_Builder*) setTotalSeats:(int32_t) value {
  result.hasTotalSeats = YES;
  result.totalSeats = value;
  return self;
}
- (GameCenterResponse_Room_Builder*) clearTotalSeats {
  result.hasTotalSeats = NO;
  result.totalSeats = 0;
  return self;
}
@end

@interface GameCenterResponse_Builder()
@property (retain) GameCenterResponse* result;
@end

@implementation GameCenterResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GameCenterResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GameCenterResponse_Builder*) clear {
  self.result = [[[GameCenterResponse alloc] init] autorelease];
  return self;
}
- (GameCenterResponse_Builder*) clone {
  return [GameCenterResponse builderWithPrototype:result];
}
- (GameCenterResponse*) defaultInstance {
  return [GameCenterResponse defaultInstance];
}
- (GameCenterResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GameCenterResponse*) buildPartial {
  GameCenterResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GameCenterResponse_Builder*) mergeFrom:(GameCenterResponse*) other {
  if (other == [GameCenterResponse defaultInstance]) {
    return self;
  }
  if (other.roomsArray.count > 0) {
    if (result.roomsArray == nil) {
      result.roomsArray = [[other.roomsArray copyWithZone:[other.roomsArray zone]] autorelease];
    } else {
      [result.roomsArray appendArray:other.roomsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GameCenterResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GameCenterResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        GameCenterResponse_Room_Builder* subBuilder = [GameCenterResponse_Room builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRooms:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)rooms {
  return result.roomsArray;
}
- (GameCenterResponse_Room*)roomsAtIndex:(NSUInteger)index {
  return [result roomsAtIndex:index];
}
- (GameCenterResponse_Builder *)addRooms:(GameCenterResponse_Room*)value {
  if (result.roomsArray == nil) {
    result.roomsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.roomsArray addObject:value];
  return self;
}
- (GameCenterResponse_Builder *)setRoomsArray:(NSArray *)array {
  result.roomsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GameCenterResponse_Builder *)setRoomsValues:(const GameCenterResponse_Room* *)values count:(NSUInteger)count {
  result.roomsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GameCenterResponse_Builder *)clearRooms {
  result.roomsArray = nil;
  return self;
}
@end

@interface User ()
@property int32_t userId;
@property (retain) NSString* userName;
@property User_UserStatusType userStatus;
@end

@implementation User

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) value_ {
  hasUserName_ = !!value_;
}
@synthesize userName;
- (BOOL) hasUserStatus {
  return !!hasUserStatus_;
}
- (void) setHasUserStatus:(BOOL) value_ {
  hasUserStatus_ = !!value_;
}
@synthesize userStatus;
- (void) dealloc {
  self.userName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.userName = @"";
    self.userStatus = User_UserStatusTypeJoined;
  }
  return self;
}
static User* defaultUserInstance = nil;
+ (void) initialize {
  if (self == [User class]) {
    defaultUserInstance = [[User alloc] init];
  }
}
+ (User*) defaultInstance {
  return defaultUserInstance;
}
- (User*) defaultInstance {
  return defaultUserInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasUserName) {
    return NO;
  }
  if (!self.hasUserStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasUserName) {
    [output writeString:2 value:self.userName];
  }
  if (self.hasUserStatus) {
    [output writeEnum:3 value:self.userStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeInt32Size(1, self.userId);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(2, self.userName);
  }
  if (self.hasUserStatus) {
    size_ += computeEnumSize(3, self.userStatus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (User*) parseFromData:(NSData*) data {
  return (User*)[[[User builder] mergeFromData:data] build];
}
+ (User*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (User*)[[[User builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (User*) parseFromInputStream:(NSInputStream*) input {
  return (User*)[[[User builder] mergeFromInputStream:input] build];
}
+ (User*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (User*)[[[User builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (User*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (User*)[[[User builder] mergeFromCodedInputStream:input] build];
}
+ (User*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (User*)[[[User builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (User_Builder*) builder {
  return [[[User_Builder alloc] init] autorelease];
}
+ (User_Builder*) builderWithPrototype:(User*) prototype {
  return [[User builder] mergeFrom:prototype];
}
- (User_Builder*) builder {
  return [User builder];
}
- (User_Builder*) toBuilder {
  return [User builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInt:self.userId]];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasUserStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"userStatus", self.userStatus];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[User class]]) {
    return NO;
  }
  User *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasUserStatus == otherMessage.hasUserStatus &&
      (!self.hasUserStatus || self.userStatus == otherMessage.userStatus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.userId] hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasUserStatus) {
    hashCode = hashCode * 31 + self.userStatus;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL User_UserStatusTypeIsValidValue(User_UserStatusType value) {
  switch (value) {
    case User_UserStatusTypeJoined:
    case User_UserStatusTypeConfirmed:
    case User_UserStatusTypePlay:
    case User_UserStatusTypeEnd:
      return YES;
    default:
      return NO;
  }
}
@interface User_Builder()
@property (retain) User* result;
@end

@implementation User_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[User alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (User_Builder*) clear {
  self.result = [[[User alloc] init] autorelease];
  return self;
}
- (User_Builder*) clone {
  return [User builderWithPrototype:result];
}
- (User*) defaultInstance {
  return [User defaultInstance];
}
- (User*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (User*) buildPartial {
  User* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (User_Builder*) mergeFrom:(User*) other {
  if (other == [User defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasUserStatus) {
    [self setUserStatus:other.userStatus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 18: {
        [self setUserName:[input readString]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (User_UserStatusTypeIsValidValue(value)) {
          [self setUserStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (User_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (User_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasUserName {
  return result.hasUserName;
}
- (NSString*) userName {
  return result.userName;
}
- (User_Builder*) setUserName:(NSString*) value {
  result.hasUserName = YES;
  result.userName = value;
  return self;
}
- (User_Builder*) clearUserName {
  result.hasUserName = NO;
  result.userName = @"";
  return self;
}
- (BOOL) hasUserStatus {
  return result.hasUserStatus;
}
- (User_UserStatusType) userStatus {
  return result.userStatus;
}
- (User_Builder*) setUserStatus:(User_UserStatusType) value {
  result.hasUserStatus = YES;
  result.userStatus = value;
  return self;
}
- (User_Builder*) clearUserStatus {
  result.hasUserStatus = NO;
  result.userStatus = User_UserStatusTypeJoined;
  return self;
}
@end

@interface RoomStatusResponse ()
@property RoomStatusResponse_RoomStatusType roomStatus;
@property (retain) PBAppendableArray * usersArray;
@end

@implementation RoomStatusResponse

- (BOOL) hasRoomStatus {
  return !!hasRoomStatus_;
}
- (void) setHasRoomStatus:(BOOL) value_ {
  hasRoomStatus_ = !!value_;
}
@synthesize roomStatus;
@synthesize usersArray;
@dynamic users;
- (void) dealloc {
  self.usersArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.roomStatus = RoomStatusResponse_RoomStatusTypeJoinSuccess;
  }
  return self;
}
static RoomStatusResponse* defaultRoomStatusResponseInstance = nil;
+ (void) initialize {
  if (self == [RoomStatusResponse class]) {
    defaultRoomStatusResponseInstance = [[RoomStatusResponse alloc] init];
  }
}
+ (RoomStatusResponse*) defaultInstance {
  return defaultRoomStatusResponseInstance;
}
- (RoomStatusResponse*) defaultInstance {
  return defaultRoomStatusResponseInstance;
}
- (PBArray *)users {
  return usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [usersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasRoomStatus) {
    return NO;
  }
  for (User* element in self.users) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRoomStatus) {
    [output writeEnum:1 value:self.roomStatus];
  }
  for (User *element in self.usersArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRoomStatus) {
    size_ += computeEnumSize(1, self.roomStatus);
  }
  for (User *element in self.usersArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RoomStatusResponse*) parseFromData:(NSData*) data {
  return (RoomStatusResponse*)[[[RoomStatusResponse builder] mergeFromData:data] build];
}
+ (RoomStatusResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomStatusResponse*)[[[RoomStatusResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RoomStatusResponse*) parseFromInputStream:(NSInputStream*) input {
  return (RoomStatusResponse*)[[[RoomStatusResponse builder] mergeFromInputStream:input] build];
}
+ (RoomStatusResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomStatusResponse*)[[[RoomStatusResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RoomStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RoomStatusResponse*)[[[RoomStatusResponse builder] mergeFromCodedInputStream:input] build];
}
+ (RoomStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomStatusResponse*)[[[RoomStatusResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RoomStatusResponse_Builder*) builder {
  return [[[RoomStatusResponse_Builder alloc] init] autorelease];
}
+ (RoomStatusResponse_Builder*) builderWithPrototype:(RoomStatusResponse*) prototype {
  return [[RoomStatusResponse builder] mergeFrom:prototype];
}
- (RoomStatusResponse_Builder*) builder {
  return [RoomStatusResponse builder];
}
- (RoomStatusResponse_Builder*) toBuilder {
  return [RoomStatusResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRoomStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"roomStatus", self.roomStatus];
  }
  for (User* element in self.usersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"users"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RoomStatusResponse class]]) {
    return NO;
  }
  RoomStatusResponse *otherMessage = other;
  return
      self.hasRoomStatus == otherMessage.hasRoomStatus &&
      (!self.hasRoomStatus || self.roomStatus == otherMessage.roomStatus) &&
      [self.usersArray isEqualToArray:otherMessage.usersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasRoomStatus) {
    hashCode = hashCode * 31 + self.roomStatus;
  }
  for (User* element in self.usersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RoomStatusResponse_RoomStatusTypeIsValidValue(RoomStatusResponse_RoomStatusType value) {
  switch (value) {
    case RoomStatusResponse_RoomStatusTypeJoinSuccess:
    case RoomStatusResponse_RoomStatusTypeRoomUnavailable:
    case RoomStatusResponse_RoomStatusTypeSeatUnavailable:
    case RoomStatusResponse_RoomStatusTypeUserInvalid:
      return YES;
    default:
      return NO;
  }
}
@interface RoomStatusResponse_Builder()
@property (retain) RoomStatusResponse* result;
@end

@implementation RoomStatusResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RoomStatusResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RoomStatusResponse_Builder*) clear {
  self.result = [[[RoomStatusResponse alloc] init] autorelease];
  return self;
}
- (RoomStatusResponse_Builder*) clone {
  return [RoomStatusResponse builderWithPrototype:result];
}
- (RoomStatusResponse*) defaultInstance {
  return [RoomStatusResponse defaultInstance];
}
- (RoomStatusResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RoomStatusResponse*) buildPartial {
  RoomStatusResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RoomStatusResponse_Builder*) mergeFrom:(RoomStatusResponse*) other {
  if (other == [RoomStatusResponse defaultInstance]) {
    return self;
  }
  if (other.hasRoomStatus) {
    [self setRoomStatus:other.roomStatus];
  }
  if (other.usersArray.count > 0) {
    if (result.usersArray == nil) {
      result.usersArray = [[other.usersArray copyWithZone:[other.usersArray zone]] autorelease];
    } else {
      [result.usersArray appendArray:other.usersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RoomStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RoomStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (RoomStatusResponse_RoomStatusTypeIsValidValue(value)) {
          [self setRoomStatus:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        User_Builder* subBuilder = [User builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRoomStatus {
  return result.hasRoomStatus;
}
- (RoomStatusResponse_RoomStatusType) roomStatus {
  return result.roomStatus;
}
- (RoomStatusResponse_Builder*) setRoomStatus:(RoomStatusResponse_RoomStatusType) value {
  result.hasRoomStatus = YES;
  result.roomStatus = value;
  return self;
}
- (RoomStatusResponse_Builder*) clearRoomStatus {
  result.hasRoomStatus = NO;
  result.roomStatus = RoomStatusResponse_RoomStatusTypeJoinSuccess;
  return self;
}
- (PBAppendableArray *)users {
  return result.usersArray;
}
- (User*)usersAtIndex:(NSUInteger)index {
  return [result usersAtIndex:index];
}
- (RoomStatusResponse_Builder *)addUsers:(User*)value {
  if (result.usersArray == nil) {
    result.usersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.usersArray addObject:value];
  return self;
}
- (RoomStatusResponse_Builder *)setUsersArray:(NSArray *)array {
  result.usersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (RoomStatusResponse_Builder *)setUsersValues:(const User* *)values count:(NSUInteger)count {
  result.usersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (RoomStatusResponse_Builder *)clearUsers {
  result.usersArray = nil;
  return self;
}
@end

@interface GameStatusRequest ()
@property int32_t userId;
@property int32_t points;
@property int32_t time;
@end

@implementation GameStatusRequest

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasPoints {
  return !!hasPoints_;
}
- (void) setHasPoints:(BOOL) value_ {
  hasPoints_ = !!value_;
}
@synthesize points;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) value_ {
  hasTime_ = !!value_;
}
@synthesize time;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.points = 0;
    self.time = 0;
  }
  return self;
}
static GameStatusRequest* defaultGameStatusRequestInstance = nil;
+ (void) initialize {
  if (self == [GameStatusRequest class]) {
    defaultGameStatusRequestInstance = [[GameStatusRequest alloc] init];
  }
}
+ (GameStatusRequest*) defaultInstance {
  return defaultGameStatusRequestInstance;
}
- (GameStatusRequest*) defaultInstance {
  return defaultGameStatusRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasPoints) {
    return NO;
  }
  if (!self.hasTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasPoints) {
    [output writeInt32:2 value:self.points];
  }
  if (self.hasTime) {
    [output writeInt32:3 value:self.time];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeInt32Size(1, self.userId);
  }
  if (self.hasPoints) {
    size_ += computeInt32Size(2, self.points);
  }
  if (self.hasTime) {
    size_ += computeInt32Size(3, self.time);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GameStatusRequest*) parseFromData:(NSData*) data {
  return (GameStatusRequest*)[[[GameStatusRequest builder] mergeFromData:data] build];
}
+ (GameStatusRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameStatusRequest*)[[[GameStatusRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GameStatusRequest*) parseFromInputStream:(NSInputStream*) input {
  return (GameStatusRequest*)[[[GameStatusRequest builder] mergeFromInputStream:input] build];
}
+ (GameStatusRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameStatusRequest*)[[[GameStatusRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameStatusRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GameStatusRequest*)[[[GameStatusRequest builder] mergeFromCodedInputStream:input] build];
}
+ (GameStatusRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameStatusRequest*)[[[GameStatusRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameStatusRequest_Builder*) builder {
  return [[[GameStatusRequest_Builder alloc] init] autorelease];
}
+ (GameStatusRequest_Builder*) builderWithPrototype:(GameStatusRequest*) prototype {
  return [[GameStatusRequest builder] mergeFrom:prototype];
}
- (GameStatusRequest_Builder*) builder {
  return [GameStatusRequest builder];
}
- (GameStatusRequest_Builder*) toBuilder {
  return [GameStatusRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInt:self.userId]];
  }
  if (self.hasPoints) {
    [output appendFormat:@"%@%@: %@\n", indent, @"points", [NSNumber numberWithInt:self.points]];
  }
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInt:self.time]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GameStatusRequest class]]) {
    return NO;
  }
  GameStatusRequest *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasPoints == otherMessage.hasPoints &&
      (!self.hasPoints || self.points == otherMessage.points) &&
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.userId] hash];
  }
  if (self.hasPoints) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.points] hash];
  }
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.time] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GameStatusRequest_Builder()
@property (retain) GameStatusRequest* result;
@end

@implementation GameStatusRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GameStatusRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GameStatusRequest_Builder*) clear {
  self.result = [[[GameStatusRequest alloc] init] autorelease];
  return self;
}
- (GameStatusRequest_Builder*) clone {
  return [GameStatusRequest builderWithPrototype:result];
}
- (GameStatusRequest*) defaultInstance {
  return [GameStatusRequest defaultInstance];
}
- (GameStatusRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GameStatusRequest*) buildPartial {
  GameStatusRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GameStatusRequest_Builder*) mergeFrom:(GameStatusRequest*) other {
  if (other == [GameStatusRequest defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasPoints) {
    [self setPoints:other.points];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GameStatusRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GameStatusRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setPoints:[input readInt32]];
        break;
      }
      case 24: {
        [self setTime:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (GameStatusRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (GameStatusRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasPoints {
  return result.hasPoints;
}
- (int32_t) points {
  return result.points;
}
- (GameStatusRequest_Builder*) setPoints:(int32_t) value {
  result.hasPoints = YES;
  result.points = value;
  return self;
}
- (GameStatusRequest_Builder*) clearPoints {
  result.hasPoints = NO;
  result.points = 0;
  return self;
}
- (BOOL) hasTime {
  return result.hasTime;
}
- (int32_t) time {
  return result.time;
}
- (GameStatusRequest_Builder*) setTime:(int32_t) value {
  result.hasTime = YES;
  result.time = value;
  return self;
}
- (GameStatusRequest_Builder*) clearTime {
  result.hasTime = NO;
  result.time = 0;
  return self;
}
@end

@interface GameStatusResponse ()
@property (retain) PBAppendableArray * statusListArray;
@end

@implementation GameStatusResponse

@synthesize statusListArray;
@dynamic statusList;
- (void) dealloc {
  self.statusListArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static GameStatusResponse* defaultGameStatusResponseInstance = nil;
+ (void) initialize {
  if (self == [GameStatusResponse class]) {
    defaultGameStatusResponseInstance = [[GameStatusResponse alloc] init];
  }
}
+ (GameStatusResponse*) defaultInstance {
  return defaultGameStatusResponseInstance;
}
- (GameStatusResponse*) defaultInstance {
  return defaultGameStatusResponseInstance;
}
- (PBArray *)statusList {
  return statusListArray;
}
- (GameStatusResponse_UserGameStatus*)statusListAtIndex:(NSUInteger)index {
  return [statusListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (GameStatusResponse_UserGameStatus* element in self.statusList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (GameStatusResponse_UserGameStatus *element in self.statusListArray) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (GameStatusResponse_UserGameStatus *element in self.statusListArray) {
    size_ += computeMessageSize(4, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GameStatusResponse*) parseFromData:(NSData*) data {
  return (GameStatusResponse*)[[[GameStatusResponse builder] mergeFromData:data] build];
}
+ (GameStatusResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameStatusResponse*)[[[GameStatusResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GameStatusResponse*) parseFromInputStream:(NSInputStream*) input {
  return (GameStatusResponse*)[[[GameStatusResponse builder] mergeFromInputStream:input] build];
}
+ (GameStatusResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameStatusResponse*)[[[GameStatusResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GameStatusResponse*)[[[GameStatusResponse builder] mergeFromCodedInputStream:input] build];
}
+ (GameStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameStatusResponse*)[[[GameStatusResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameStatusResponse_Builder*) builder {
  return [[[GameStatusResponse_Builder alloc] init] autorelease];
}
+ (GameStatusResponse_Builder*) builderWithPrototype:(GameStatusResponse*) prototype {
  return [[GameStatusResponse builder] mergeFrom:prototype];
}
- (GameStatusResponse_Builder*) builder {
  return [GameStatusResponse builder];
}
- (GameStatusResponse_Builder*) toBuilder {
  return [GameStatusResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (GameStatusResponse_UserGameStatus* element in self.statusListArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"statusList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GameStatusResponse class]]) {
    return NO;
  }
  GameStatusResponse *otherMessage = other;
  return
      [self.statusListArray isEqualToArray:otherMessage.statusListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (GameStatusResponse_UserGameStatus* element in self.statusListArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GameStatusResponse_UserGameStatus ()
@property int32_t userId;
@property User_UserStatusType userStatus;
@property int32_t points;
@property int32_t time;
@property (retain) NSString* userName;
@end

@implementation GameStatusResponse_UserGameStatus

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasUserStatus {
  return !!hasUserStatus_;
}
- (void) setHasUserStatus:(BOOL) value_ {
  hasUserStatus_ = !!value_;
}
@synthesize userStatus;
- (BOOL) hasPoints {
  return !!hasPoints_;
}
- (void) setHasPoints:(BOOL) value_ {
  hasPoints_ = !!value_;
}
@synthesize points;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) value_ {
  hasTime_ = !!value_;
}
@synthesize time;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) value_ {
  hasUserName_ = !!value_;
}
@synthesize userName;
- (void) dealloc {
  self.userName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.userStatus = User_UserStatusTypeJoined;
    self.points = 0;
    self.time = 0;
    self.userName = @"";
  }
  return self;
}
static GameStatusResponse_UserGameStatus* defaultGameStatusResponse_UserGameStatusInstance = nil;
+ (void) initialize {
  if (self == [GameStatusResponse_UserGameStatus class]) {
    defaultGameStatusResponse_UserGameStatusInstance = [[GameStatusResponse_UserGameStatus alloc] init];
  }
}
+ (GameStatusResponse_UserGameStatus*) defaultInstance {
  return defaultGameStatusResponse_UserGameStatusInstance;
}
- (GameStatusResponse_UserGameStatus*) defaultInstance {
  return defaultGameStatusResponse_UserGameStatusInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasUserStatus) {
    return NO;
  }
  if (!self.hasPoints) {
    return NO;
  }
  if (!self.hasTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasUserStatus) {
    [output writeEnum:2 value:self.userStatus];
  }
  if (self.hasPoints) {
    [output writeInt32:3 value:self.points];
  }
  if (self.hasTime) {
    [output writeInt32:4 value:self.time];
  }
  if (self.hasUserName) {
    [output writeString:5 value:self.userName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeInt32Size(1, self.userId);
  }
  if (self.hasUserStatus) {
    size_ += computeEnumSize(2, self.userStatus);
  }
  if (self.hasPoints) {
    size_ += computeInt32Size(3, self.points);
  }
  if (self.hasTime) {
    size_ += computeInt32Size(4, self.time);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(5, self.userName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GameStatusResponse_UserGameStatus*) parseFromData:(NSData*) data {
  return (GameStatusResponse_UserGameStatus*)[[[GameStatusResponse_UserGameStatus builder] mergeFromData:data] build];
}
+ (GameStatusResponse_UserGameStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameStatusResponse_UserGameStatus*)[[[GameStatusResponse_UserGameStatus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GameStatusResponse_UserGameStatus*) parseFromInputStream:(NSInputStream*) input {
  return (GameStatusResponse_UserGameStatus*)[[[GameStatusResponse_UserGameStatus builder] mergeFromInputStream:input] build];
}
+ (GameStatusResponse_UserGameStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameStatusResponse_UserGameStatus*)[[[GameStatusResponse_UserGameStatus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameStatusResponse_UserGameStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GameStatusResponse_UserGameStatus*)[[[GameStatusResponse_UserGameStatus builder] mergeFromCodedInputStream:input] build];
}
+ (GameStatusResponse_UserGameStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameStatusResponse_UserGameStatus*)[[[GameStatusResponse_UserGameStatus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameStatusResponse_UserGameStatus_Builder*) builder {
  return [[[GameStatusResponse_UserGameStatus_Builder alloc] init] autorelease];
}
+ (GameStatusResponse_UserGameStatus_Builder*) builderWithPrototype:(GameStatusResponse_UserGameStatus*) prototype {
  return [[GameStatusResponse_UserGameStatus builder] mergeFrom:prototype];
}
- (GameStatusResponse_UserGameStatus_Builder*) builder {
  return [GameStatusResponse_UserGameStatus builder];
}
- (GameStatusResponse_UserGameStatus_Builder*) toBuilder {
  return [GameStatusResponse_UserGameStatus builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInt:self.userId]];
  }
  if (self.hasUserStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"userStatus", self.userStatus];
  }
  if (self.hasPoints) {
    [output appendFormat:@"%@%@: %@\n", indent, @"points", [NSNumber numberWithInt:self.points]];
  }
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInt:self.time]];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GameStatusResponse_UserGameStatus class]]) {
    return NO;
  }
  GameStatusResponse_UserGameStatus *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUserStatus == otherMessage.hasUserStatus &&
      (!self.hasUserStatus || self.userStatus == otherMessage.userStatus) &&
      self.hasPoints == otherMessage.hasPoints &&
      (!self.hasPoints || self.points == otherMessage.points) &&
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.userId] hash];
  }
  if (self.hasUserStatus) {
    hashCode = hashCode * 31 + self.userStatus;
  }
  if (self.hasPoints) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.points] hash];
  }
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.time] hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GameStatusResponse_UserGameStatus_Builder()
@property (retain) GameStatusResponse_UserGameStatus* result;
@end

@implementation GameStatusResponse_UserGameStatus_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GameStatusResponse_UserGameStatus alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GameStatusResponse_UserGameStatus_Builder*) clear {
  self.result = [[[GameStatusResponse_UserGameStatus alloc] init] autorelease];
  return self;
}
- (GameStatusResponse_UserGameStatus_Builder*) clone {
  return [GameStatusResponse_UserGameStatus builderWithPrototype:result];
}
- (GameStatusResponse_UserGameStatus*) defaultInstance {
  return [GameStatusResponse_UserGameStatus defaultInstance];
}
- (GameStatusResponse_UserGameStatus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GameStatusResponse_UserGameStatus*) buildPartial {
  GameStatusResponse_UserGameStatus* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GameStatusResponse_UserGameStatus_Builder*) mergeFrom:(GameStatusResponse_UserGameStatus*) other {
  if (other == [GameStatusResponse_UserGameStatus defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserStatus) {
    [self setUserStatus:other.userStatus];
  }
  if (other.hasPoints) {
    [self setPoints:other.points];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GameStatusResponse_UserGameStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GameStatusResponse_UserGameStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (User_UserStatusTypeIsValidValue(value)) {
          [self setUserStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setPoints:[input readInt32]];
        break;
      }
      case 32: {
        [self setTime:[input readInt32]];
        break;
      }
      case 42: {
        [self setUserName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (GameStatusResponse_UserGameStatus_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (GameStatusResponse_UserGameStatus_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasUserStatus {
  return result.hasUserStatus;
}
- (User_UserStatusType) userStatus {
  return result.userStatus;
}
- (GameStatusResponse_UserGameStatus_Builder*) setUserStatus:(User_UserStatusType) value {
  result.hasUserStatus = YES;
  result.userStatus = value;
  return self;
}
- (GameStatusResponse_UserGameStatus_Builder*) clearUserStatus {
  result.hasUserStatus = NO;
  result.userStatus = User_UserStatusTypeJoined;
  return self;
}
- (BOOL) hasPoints {
  return result.hasPoints;
}
- (int32_t) points {
  return result.points;
}
- (GameStatusResponse_UserGameStatus_Builder*) setPoints:(int32_t) value {
  result.hasPoints = YES;
  result.points = value;
  return self;
}
- (GameStatusResponse_UserGameStatus_Builder*) clearPoints {
  result.hasPoints = NO;
  result.points = 0;
  return self;
}
- (BOOL) hasTime {
  return result.hasTime;
}
- (int32_t) time {
  return result.time;
}
- (GameStatusResponse_UserGameStatus_Builder*) setTime:(int32_t) value {
  result.hasTime = YES;
  result.time = value;
  return self;
}
- (GameStatusResponse_UserGameStatus_Builder*) clearTime {
  result.hasTime = NO;
  result.time = 0;
  return self;
}
- (BOOL) hasUserName {
  return result.hasUserName;
}
- (NSString*) userName {
  return result.userName;
}
- (GameStatusResponse_UserGameStatus_Builder*) setUserName:(NSString*) value {
  result.hasUserName = YES;
  result.userName = value;
  return self;
}
- (GameStatusResponse_UserGameStatus_Builder*) clearUserName {
  result.hasUserName = NO;
  result.userName = @"";
  return self;
}
@end

@interface GameStatusResponse_Builder()
@property (retain) GameStatusResponse* result;
@end

@implementation GameStatusResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GameStatusResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GameStatusResponse_Builder*) clear {
  self.result = [[[GameStatusResponse alloc] init] autorelease];
  return self;
}
- (GameStatusResponse_Builder*) clone {
  return [GameStatusResponse builderWithPrototype:result];
}
- (GameStatusResponse*) defaultInstance {
  return [GameStatusResponse defaultInstance];
}
- (GameStatusResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GameStatusResponse*) buildPartial {
  GameStatusResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GameStatusResponse_Builder*) mergeFrom:(GameStatusResponse*) other {
  if (other == [GameStatusResponse defaultInstance]) {
    return self;
  }
  if (other.statusListArray.count > 0) {
    if (result.statusListArray == nil) {
      result.statusListArray = [[other.statusListArray copyWithZone:[other.statusListArray zone]] autorelease];
    } else {
      [result.statusListArray appendArray:other.statusListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GameStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GameStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 34: {
        GameStatusResponse_UserGameStatus_Builder* subBuilder = [GameStatusResponse_UserGameStatus builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addStatusList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)statusList {
  return result.statusListArray;
}
- (GameStatusResponse_UserGameStatus*)statusListAtIndex:(NSUInteger)index {
  return [result statusListAtIndex:index];
}
- (GameStatusResponse_Builder *)addStatusList:(GameStatusResponse_UserGameStatus*)value {
  if (result.statusListArray == nil) {
    result.statusListArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.statusListArray addObject:value];
  return self;
}
- (GameStatusResponse_Builder *)setStatusListArray:(NSArray *)array {
  result.statusListArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (GameStatusResponse_Builder *)setStatusListValues:(const GameStatusResponse_UserGameStatus* *)values count:(NSUInteger)count {
  result.statusListArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (GameStatusResponse_Builder *)clearStatusList {
  result.statusListArray = nil;
  return self;
}
@end

