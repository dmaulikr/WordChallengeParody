// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class LoginRequest;
@class LoginRequest_Builder;
@class LoginResponse;
@class LoginResponse_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  LoginResponse_StatusTypeSuccess = 0,
  LoginResponse_StatusTypeAccountInvalid = 1,
} LoginResponse_StatusType;

BOOL LoginResponse_StatusTypeIsValidValue(LoginResponse_StatusType value);


@interface LoginRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface LoginRequest : PBGeneratedMessage {
@private
  BOOL hasUsername_:1;
  BOOL hasPassword_:1;
  NSString* username;
  NSString* password;
}
- (BOOL) hasUsername;
- (BOOL) hasPassword;
@property (readonly, retain) NSString* username;
@property (readonly, retain) NSString* password;

+ (LoginRequest*) defaultInstance;
- (LoginRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LoginRequest_Builder*) builder;
+ (LoginRequest_Builder*) builder;
+ (LoginRequest_Builder*) builderWithPrototype:(LoginRequest*) prototype;
- (LoginRequest_Builder*) toBuilder;

+ (LoginRequest*) parseFromData:(NSData*) data;
+ (LoginRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginRequest*) parseFromInputStream:(NSInputStream*) input;
+ (LoginRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LoginRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LoginRequest_Builder : PBGeneratedMessage_Builder {
@private
  LoginRequest* result;
}

- (LoginRequest*) defaultInstance;

- (LoginRequest_Builder*) clear;
- (LoginRequest_Builder*) clone;

- (LoginRequest*) build;
- (LoginRequest*) buildPartial;

- (LoginRequest_Builder*) mergeFrom:(LoginRequest*) other;
- (LoginRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LoginRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUsername;
- (NSString*) username;
- (LoginRequest_Builder*) setUsername:(NSString*) value;
- (LoginRequest_Builder*) clearUsername;

- (BOOL) hasPassword;
- (NSString*) password;
- (LoginRequest_Builder*) setPassword:(NSString*) value;
- (LoginRequest_Builder*) clearPassword;
@end

@interface LoginResponse : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  BOOL hasStatus_:1;
  int32_t userId;
  LoginResponse_StatusType status;
}
- (BOOL) hasStatus;
- (BOOL) hasUserId;
@property (readonly) LoginResponse_StatusType status;
@property (readonly) int32_t userId;

+ (LoginResponse*) defaultInstance;
- (LoginResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LoginResponse_Builder*) builder;
+ (LoginResponse_Builder*) builder;
+ (LoginResponse_Builder*) builderWithPrototype:(LoginResponse*) prototype;
- (LoginResponse_Builder*) toBuilder;

+ (LoginResponse*) parseFromData:(NSData*) data;
+ (LoginResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginResponse*) parseFromInputStream:(NSInputStream*) input;
+ (LoginResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LoginResponse_Builder : PBGeneratedMessage_Builder {
@private
  LoginResponse* result;
}

- (LoginResponse*) defaultInstance;

- (LoginResponse_Builder*) clear;
- (LoginResponse_Builder*) clone;

- (LoginResponse*) build;
- (LoginResponse*) buildPartial;

- (LoginResponse_Builder*) mergeFrom:(LoginResponse*) other;
- (LoginResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LoginResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatus;
- (LoginResponse_StatusType) status;
- (LoginResponse_Builder*) setStatus:(LoginResponse_StatusType) value;
- (LoginResponse_Builder*) clearStatus;

- (BOOL) hasUserId;
- (int32_t) userId;
- (LoginResponse_Builder*) setUserId:(int32_t) value;
- (LoginResponse_Builder*) clearUserId;
@end

